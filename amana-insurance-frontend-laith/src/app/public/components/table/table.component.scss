@import '../../../styles/_variables.scss';

main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  .consult-container {
    display: flex;
    flex-direction: column;
    gap: 20px;
    .mdc-circular-progress {
      position: absolute;
      top: 50%;
      left: 50%;
    }

    .search-box-hidden {
      border-radius: 20px;
      background-color: transparent;
      padding: 0 10px 0 15px;
      height: 45px;
      display: flex;
      align-items: center;
      transition: all 0.5s ease-in;
      width: fit-content;
      -webkit-transition: -webkit-transform 1s, background 1s, border 1s;

      .search-button {
        width: 30px;
        height: 30px;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        cursor: pointer;
        border-radius: 50%;

        i {
          color: map-get($colors, "primary");

          &:hover {
            opacity: 0.5;
          }
        }
      }

      .search-input {
        height: 0;
        width: 0;
        padding: 0;
        transition: width .5s ease-in-out;
        border: none;
      }
    }

    .search-box-showed {
      border-radius: 20px;
      background-color: white;
      height: 45px;
      width: fit-content;
      display: flex;
      gap: 15px;
      align-items: center;
      padding: 0 10px 0 15px;

      .search-input {
        height: 40px;
        border: none;
        display: block;
        background: none;
        outline: none;
        padding: 0;
        color: map-get($colors, "text");
        font-size: 15px;
        font-family: map-get($fonts, "poppins-semi-bold");
        line-height: 30px;
        width: 250px;
        transition: width .5s ease-in-out;
      }

      .search-button {
        background-color: map-get($colors, "background");
        width: 30px;
        height: 30px;
        float: right;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        cursor: pointer;
        border-radius: 50%;

        i {
          color: map-get($colors, "primary");
        }
      }
    }

    .table-container {
      border-radius: 8px;
      box-shadow: 0 14.625px 80.4375px -21.9375px rgba(43, 37, 37, 0.12);
      overflow: hidden;
      table {
        tr:has(th) {

          th {
            font-weight: bold;
            border: none;
            text-transform: uppercase;
            font-family: 'Cairo', sans-serif;
            font-size: 14px;
            background-color: white;
            color: map-get($colors, "primary");

            ::ng-deep .mat-sort-header-container {
              justify-content: center;
            }
            text-align: center;
          }
        }
        tr td {
          height: 70px;
          border: none;
          background-color: white;
          font-family: 'Changa', sans-serif;
          font-size: 0.8em;
          direction: ltr;
          text-align: center;

          .chip {
            width: 100px;
            height: 30px;
            border-radius: 12px;
            display: grid;
            place-items: center;
            font-size: 11px;
            //box-shadow: 0 2px 10px 0 rgba(110, 116, 134, 0.24);
          }

          .group-health-insurance-chip {
            color: map-get($colors, "chips", "text", "insurance", "group-health");
            background-color: map-get($colors, "chips", "backgrounds", "insurance", "group-health");
          }

          .person-health-insurance-chip {
            color: map-get($colors, "chips", "text", "insurance", "person-health");
            background-color: map-get($colors, "chips", "backgrounds", "insurance", "person-health");
          }

          .obligatory-insurance-chip {
            background-color: map-get($colors, "chips", "backgrounds", "insurance", "obligatory");
            color: map-get($colors, "chips", "text", "insurance", "obligatory");
          }

          .travel-insurance-chip {
            background-color: map-get($colors, "chips", "backgrounds", "insurance", "travel");
            color:map-get($colors, "chips", "text", "insurance", "travel")
          }

          .third-party-insurance-chip {
            background-color: map-get($colors, "chips", "backgrounds","insurance", "third-party");
            color:map-get($colors, "chips", "text", "insurance", "third-party")
          }

          .admin-role-chip {
            color: map-get($colors, "chips", "text", "role", "admin");
            background-color: map-get($colors, "chips", "backgrounds", "role", "admin");
          }

          .director-role-chip {
            color: map-get($colors, "chips", "text", "role", "director");
            background-color: map-get($colors, "chips", "backgrounds", "role", "director");
          }

          .user-role-chip {
            color: map-get($colors, "chips", "text", "role", "user");
            background-color: map-get($colors, "chips", "backgrounds", "role", "user");
          }

          .finance-role-chip {
            color: map-get($colors, "chips", "text", "role", "finance");
            background-color: map-get($colors, "chips", "backgrounds", "role", "finance");
          }

          .pending-payment-chip {
            color: map-get($colors, "chips", "text", "payment", "pending");
            background-color: map-get($colors, "chips", "backgrounds", "payment", "pending");
          }

          .accepted-payment-chip {
            color: map-get($colors, "chips", "text", "payment", "accepted");
            background-color: map-get($colors, "chips", "backgrounds", "payment", "accepted");
          }

          .rejected-payment-chip {
            color: map-get($colors, "chips", "text", "payment", "rejected");
            background-color: map-get($colors, "chips", "backgrounds", "payment", "rejected");
          }

          button:hover{
            .mat-icon{
              animation: rotateIcon 3s infinite linear;
            }
          }

        }
        td:is(.mat-column-endDate), td:is(.mat-column-startDate), td:is(.mat-column-paymentDate){
          direction: rtl !important;
        }
        td:is(.mat-column-role), td:is(.mat-column-type), td:is(.mat-column-status) {
          display: grid ;
          place-items: center ;
        }
      }
    }
  }

  #add-button {
    width: fit-content;
    height: 50px;
    border-radius: 5px;
    place-self: end;
    color: white;
    margin-top: 15px;

    span {
      display: flex;
      align-items: center;
      gap: 30px;
    }
  }

}

@keyframes rotateIcon {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
